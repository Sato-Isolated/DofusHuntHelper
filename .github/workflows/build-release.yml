name: Build et Release

permissions:
  contents: write

on:
  # Déclenchement manuel via le bouton "Run workflow"
  workflow_dispatch:
    inputs:
      tag:
        description: "Nom du tag pour la release (ex: v1.0.0). Laissez vide pour générer automatiquement un tag."
        required: false
  # Déclenchement automatique lorsque vous poussez un tag commençant par 'v'
  push:
    tags:
      - 'v*'

jobs:
  build-windows:
    runs-on: windows-latest

    steps:
      - name: Récupérer le code source
        uses: actions/checkout@v3

      - name: Configurer .NET
        uses: actions/setup-dotnet@v3
        with:
          # Utilise la version 8.x de .NET
          dotnet-version: '8.0.x'

      - name: Restaurer les dépendances
        run: dotnet restore DofusHuntHelper.sln

      - name: Compiler la solution (Release, framework Windows)
        run: dotnet build DofusHuntHelper.sln --configuration Release --framework net8.0-windows --no-restore

      - name: Publier l'application (runtime Windows 64-bit)
        run: dotnet publish DofusHuntHelper.sln --configuration Release --framework net8.0-windows --runtime win-x64 --self-contained false --output publish

      - name: Créer l'archive des fichiers publiés
        run: Compress-Archive -Path publish\* -DestinationPath DofusHuntHelper.zip

      - name: Définir le tag
        id: set_tag
        shell: pwsh
        run: |
          $inputTag = "${{ github.event.inputs.tag }}"
          $refName = "${{ github.ref_name }}"
          if ([string]::IsNullOrEmpty($inputTag)) {
              if (-not [string]::IsNullOrEmpty($refName)) {
                  $tag = $refName
              }
              else {
                  $tag = "vmanual-" + (Get-Date -Format "yyyyMMdd-HHmmss")
              }
          } else {
              $tag = $inputTag
          }
          Write-Output "generated_tag=$tag" >> $env:GITHUB_OUTPUT

      - name: Créer la release GitHub
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.set_tag.outputs.generated_tag }}
          release_name: "Release ${{ steps.set_tag.outputs.generated_tag }}"
          draft: false
          prerelease: false

      - name: Upload de l'asset sur la release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: DofusHuntHelper.zip
          asset_name: DofusHuntHelper.zip
          asset_content_type: application/zip
