<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAABILAAASCwAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAACA6dAAAAmgAOHp4QByOgOAcko1wHI6FpAiCeaAEdn1IBE44qAABZCAAFmwAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAfAAdDrQADMJUUEjecbREsmcYMOaPwFUGw/h1Is/9Qesf/WoXL+z12vucXWaqxCEObTwYd
        bAcHKH4AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAADw7wAA//EBE+LwOk7F5buIxuL8i8Le/3O83v96ut3/bsjq/8b7/f/J////o/D+/07K
        9P8SlufzEGbCjgIYfREDJosAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAC8PgAAOn5Aw/09WJP+Pnlq/39/8z////R////qfj7/17d8P8uzfr/qfT+/8D9
        //+c8v7/XeD9/xaw/v8Ohur8Cj2qmgUVmQ8HJqQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAEN71AB7//wAK7/teNfb88Iz7/f/B/P3/yv3+/8v+/v+R/P3/Eeb8/wW4
        /f9Ezvv/g+v9/2Xl/v831/3/D6n9/wuQ/f8OUsT8K0mzg87//wWQwuIAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAACMkjQAJ4vwAB9z5LQ7o/d018fz/kvr+/7/8/v/D/fz/tv39/2n5
        /f8I6f3/CLr8/wqq/P8pwP3/JM79/w7A+/8Kmvv/C4f//zCF6P+n2O30nfn9iSTf+Qw/4/kAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADabmAGIAVwAI0/uOBtz9/zDt+/+D+v7/lPv+/4b6
        /P+A9/3/L+/6/w/i+P8rsOn/FJj3/wma/f8LoPv/DZj0/w+H+v8LfPz/SKf4/7v7/v948P36Ldv5ZVT/
        /wAHjN8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAOrfMADqzyFgbJ+9EH0Pz/N+z9/135
        /f9L8vz/HuX8/zft+/8f5fz/Jcvt/0yk4P8ofOP/EXvw/wxn5v8Qe/j/Env7/w1y9f8doPP/Xe78/y3a
        /f8RyPu3FJPoCRic6QAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABaf8QAVlusmDaHx4A6+
        /f8m6/3/NvH8/xfc+/8J1P3/GuX9/xfT9v8lsdz/MJnc/xx22f8TTtv/CyK4/w1Dy/8Pbu//Cmbn/wp5
        2P8Yzvf/F9H8/wy5/NkUm+8cFJ7xAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFWPTAA81
        sw0Ncdq7CbX8/w7p/f8T1Pv/DMX9/w3H/v8Qz/3/Frfq/yGq1P8egdX/G3rt/xZr8v8KJ7b/AhOV/wk7
        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
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAjCwAAAUkQUXUNB8G1rd9wY2z/8BHsX/Aw+4/wIIsv8CCav/BBKT/woioPQLJqhxCCSpAwkl
        qQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAEC6pAAkfmQgXUcttGVna3xI/zf4RLsD/CyC1/wcZpP0KIqLaCiamYwwm
        pwYLJqYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABReBAAAAVQIUS8IoG2HZZSBe3YQRQMCLCCmnZgoq
        oyMMIq4BDCenAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA//////////////////AP///AA///AAH//gAA//4AAH/8AAA//AAAP/gA
        AB/4AAAf+AAAH/gAAB/4AAA/+AAAP/gAAD/4AAA/+AAAf/wAAH/8AAB//AAA//8AAP//gAH//4AB///A
        A///wAP//+AH///wD/////////////////8=
</value>
  </data>
</root>